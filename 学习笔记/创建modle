语法：depot> ruby script/generate scaffold product \
title:string description:text image_url:string
可以这样理解
ruby script/generate 以ruby命令方式执行script文件夹中generate命令
scaffold product相当于参数，即（“scaffold”,"product")即创建一个名
字为product的scaffold类的实例
\  因为命令行转行而存在的
title:string description:text image_url:string是product的参数

这个命令完成了那些事件
=》按照惯例检查了文件夹结构
=》创建了view文件，”模板文件“，以及对应crud的视图文件，
=》创建了controller 以及crud的action method
=》创建了AR model
=》创建routine map文件
=》创建了数据库迁移文件。
=》创建了单元测试以及helper文件。

执行数据迁移
命令： rake db:migrate --trace (加载该参数，可以显示具体错误)

创建验证器的方法：
=》直接利用rails中自带的验证器，(validate_   ),并配置message等参数
=》定义procted 验证method，method的命名体验代码的目的，并使用 validate :(method 名)，通知验证器调用。

为什么要使用测试类？
测试需要一个统一的系列数据，每个开发者测试需求不同，但必须遵循别的开发者的需求。


model的method中，加入“self。”意味着该定义是个类的方法，是在整个类的基础上调用它，而不是针对任何实例的，调用方法应该
是Product."method".


session
为什么要将session的数据存在一个数据表中，主要是考虑到数据的可靠性与可伸缩性。
假设存在服务器文件中，在下列情况下出bug
1，使用多个服务器并联
2 使用中，服务器突然重启。

seseion 就是一个散列。

如何启用在数据库中保存session数据
1 创建session 数据表的数据迁移任务
2 配置文件中，更改session数据为配置选项
3 需要使用session中获取数据的method的定义，定义session【:cart】
4 定义一个cart的class 

session中保存尽量简单的东西，比如：字符串，数字，等等，应用层面的数据应该放在数据库中，所以本案例中，更好的做法是cart类是以AR模型,
将购物车数据保存在数据库中，而session中指对应的cart对象的id。


flash是什么？
flash是针对同一个session下，是一个临时存储数据的方式存储结构同hash的key value 结构，在用户下一个请求下，可以提取该数据，
并销毁当前数据。一般用于储存错误提醒信息。


建立ajax应用的基本步骤
=>使用form_remote_tag ,设置浏览器可以发送远程ajax请求，包括设置url参数
=>使用submit_tag或者其他的tag定义form区域
=>模板中装载rails的js库
=>使用respond_to ,修改对应action的应答代码
=>创建respond 的嵌入模本

数据迁移任务
rail 迁移任务中，并未提供一种独立于数据库的方法来指定外键，所以只好执行原生的DDL语句来建立外键，同时，必须在model中建立模型中的关系。
